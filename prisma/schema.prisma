// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String
  password    String 
  token       String?
  role        Role     @default(STUDENT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  mentorMeetups Meetup[]
  subcribedMeetups MeetupSubcriber[]
  tags             Tag[]
}

model Meetup {
  id          Int      @id @default(autoincrement())
  name        String
  description String 
  place       String
  time        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User? @relation(fields: [userId], references: [id])
  userId      Int?
  subscribers MeetupSubcriber[]
  tags MeetupTag[]
}

model MeetupTag {
  meetup      Meetup @relation(fields: [meetupId], references: [id])
  tag        Tag @relation(fields: [tagId], references: [id])
  tagId      Int
  meetupId    Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([tagId, meetupId])
}

model MeetupSubcriber {
  meetup      Meetup @relation(fields: [meetupId], references: [id])
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  meetupId    Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, meetupId])
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User? @relation(fields: [userId], references: [id])
  userId      Int? 
  meetups MeetupTag[]
}

enum Role {
  ADMIN
  MENTOR
  STUDENT
}